
<!DOCTYPE html>
<meta charset="utf-8">
<style>
    body {
        background: #fcfcfa;
    }

    .stroke {
        fill: none;
        stroke: #000;
        stroke-width: 3px;
    }

    .fill {
        fill: #fff;
    }

    .graticule {
        fill: none;
        stroke: #777;
        stroke-width: .5px;
        stroke-opacity: .5;
    }

    .land {
        fill: #222;
    }

    .boundary {
        fill: none;
        stroke: #fff;
        stroke-width: .5px;
    }
</style>
<body>
    <script src="//d3js.org/d3.v3.min.js"></script>
    <script src="//d3js.org/d3.geo.projection.v0.min.js"></script>
    <script src="//d3js.org/topojson.v1.min.js"></script>
    <script>

        var marks = [];
        $.ajax({
            url: '@Url.Action("pinmapjson", "Graph")',
            type: "GET",
            success: function (result) {

                $.each(result, function (k, v) {
                    var mark = { long: v.item1, lat: v.item2 };
                    marks.push(mark);
                });
                    var width = 960,
                     height = 580;
                    var color = d3.scale.category10();
                    var projection = d3.geo.kavrayskiy7()
                        .scale(170)
                        .translate([width / 2, height / 2])
                        .precision(.1);
                    var path = d3.geo.path()
                        .projection(projection);
                    var graticule = d3.geo.graticule();
                    var svg = d3.select("body").append("svg")
                        .attr("width", width)
                        .attr("height", height);
                    svg.append("defs").append("path")
                        .datum({ type: "Sphere" })
                        .attr("id", "sphere")
                        .attr("d", path);
                    svg.append("use")
                        .attr("class", "stroke")
                        .attr("xlink:href", "#sphere");
                    svg.append("use")
                    .attr("class", "fill")
                    .attr("xlink:href", "#sphere");
                    svg.append("path")
                        .datum(graticule)
                        .attr("class", "graticule")
                        .attr("d", path);
                    d3.json("https://raw.githubusercontent.com/react-d3/react-d3-map/master/example/data/world-50m.json", function (error, world) {
                        if (error) throw error;
                        var countries = topojson.feature(world, world.objects.countries).features,
                            neighbors = topojson.neighbors(world.objects.countries.geometries);
                        svg.selectAll(".country")
                            .data(countries)
                          .enter().insert("path", ".graticule")
                            .attr("class", "country")
                            .attr("d", path)
                            .style("fill", function (d, i) { return color(d.color = d3.max(neighbors[i], function (n) { return countries[n].color; }) + 1 | 0); });
                        svg.insert("path", ".graticule")
                            .datum(topojson.mesh(world, world.objects.countries, function (a, b) { return a !== b; }))
                            .attr("class", "boundary")
                            .attr("d", path);




                        svg.selectAll(".mark")
                            .data(marks)
                            .enter()
                            .append("image")
                            .attr('class', 'mark')
                            .attr('width', 20)
                            .attr('height', 20)
                            .attr("xlink:href", 'https://cdn3.iconfinder.com/data/icons/softwaredemo/PNG/24x24/DrawingPin1_Blue.png')
                            .attr("transform", function (d) {
                                return "translate(" + projection([d.long, d.lat]) + ")";
                            });
                    });
                    d3.select(self.frameElement).style("height", height + "px");


            },
        });






    </script>
