@{
    ViewData["Title"] = "#DATA";
}
<div id="middle">
    <div id="backimage">
        <p id="title">#DATA</p>
    </div>
    <div id="tfheader">

        <input id="search" type="text" class="tftextinput" placeholder="Enter Query Here" name="q" size="21" maxlength="120"><input id="submit" type="submit" class="tfbutton" value=" ">

    </div>
    <div id="options">

    </div>
    <div id="tweets">
        <div id="icons">
            <div id="page"><img id="svg-graph" src="~/images/PIE.svg" alt="Pie" /></div>
            <div id="page"><img id="svg-graph" src="~/images/BAR.svg" alt="Bar" /></div>
            <div id="page"><img id="svg-graph" src="~/images/LINE.svg" alt="Line" /></div>
            <div id="page"><img id="svg-graph" src="~/images/VENN.svg" alt="Venn" /></div>
        </div>
        <div id="data">
            <div id="graph">
                <div class="loading-container">
                    <div class="loading">Loading...</div>
                </div>
            <!--<iframe frameBorder="0"></iframe>-->
                <p id="tweettext"></p>
                <div id="chart"></div>
            </div>
        </div>
    </div>
    <div id="footerSpace"style="margin-top:36vh"></div>
</div>
<script src="https://d3js.org/d3.v4.min.js"></script>



<script type="text/javascript">
    $ = jQuery;

    function piechart(d3, dataset) {
        d3.json(dataset, function(error, json){
            if (error) return console.warn(error);

            'use strict';
            var width = 360;
            var height = 360;
            var radius = Math.min(width, height) / 2;

            var color = d3.scaleOrdinal(d3.schemeCategory20b);

            var svg = d3.select('#chart')
              .append('svg')
              .attr('width', width)
              .attr('height', height)
              .append('g')
              .attr('transform', 'translate(' + (width / 2) +
                ',' + (height / 2) + ')');

            var arc = d3.arc()
              .innerRadius(0)
              .outerRadius(radius);

            var pie = d3.pie()
              .value(function(d) { return d.count; })
              .sort(null);

            var path = svg.selectAll('path')
              .data(pie(json))
              .enter()
              .append('path')
              .attr('d', arc)
              .attr('fill', function(d) {
                  return color(d.data.label);
              });
        } )}(window.d3);

    function handleResults(data) {
        $("#tweettext").text(data);
        //var svg = d3.select("#tweettext").append("svg").attr("width", 100).attr("height", 150);
        //svg.selectAll("rect").data(tweetdata).enter().append("rect");
        
        //$("tweettext").text(svg.data);

        $('.loading-container').hide();
        //piechart(d3,data);
    };
    function slideUp() {
        var h = $(window).height() * .1;

        $("#title").animate({ 'font-size': '5vmax' }, 500);
        $("#tfheader").animate({ 'margin-top': '0vh' });
        $("#middle").animate({ 'margin-top': '0vh' }, 700, 'swing', function () {
            $('#options').slideDown({
                complete:
                    function () {
                        $('#tweets').show({ complete: function () { $("#footerSpace").animate({ 'margin-top': '0vh' }, 'fast'); } })
                    }
            })
        });
            
    };


    $(document).ready(function () {

    });


    $('#submit').click(function () {
        if ($('#search').val() != 'undefined') {
            slideUp();
            $.ajax('@Url.Action("search", "Graph")', {
                method: 'POST',
                data: { search: $('#search').val() },
                success: handleResults
            });
        }
        });
</script>